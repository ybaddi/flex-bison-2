PROG: BEGIN LIST_DECL END BEGIN LIST_INST END
LIST_DECL : DECL 
            | LSIT_DECL DECL


LIST_INST : INST
            | LIST_INST INST

 DECL : TYPE idf = CONST ';'
        | TYPE idf  ';'
TYPE  : INT | FLOAT | BOOL | STRING
CONST : number | true | false | umber.number | STRINGVALUE
STRINGVALUE : QUOTE IDF QUOTE

INST : idf = CONST ';' 
        | idf = INSSUB ;
        | IF PAR_OPEN  IDF  OP_LOGIC  INSSUB  PAR_CLOSE THEN LIST_INST ENDIF 
 OP_LOGIC : == | <= | < | >= | > | !=
 INSSUB : MULT ADDSUBAUX
        | IDF
        | NOMBRE   // or just AUX
        ;            
ADDSUBAUX : - MULT ADDSUBAUX
ADDSUBAUX : + MULT ADDSUBAUX
ADDSUBAUX : epsilon

MULT: AUX MULTAUX
MULT : *  AUX MULTAUX
MULT : epsilon

AUX: IDF
AUX : NOMBRE
AUX : '(INSSUB)

